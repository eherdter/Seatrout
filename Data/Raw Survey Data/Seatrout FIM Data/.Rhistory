#Indian River (Northern Indian River Lagoon???)
IR_C <- read_sas("irm_cn_c.sas7bdat")
IR_Hab <- read_sas("irm_cn_hab.sas7bdat")
IR_Hyd <- read_sas("irm_cn_hyd.sas7bdat")
IR_L <- read_sas("irm_cn_l.sas7bdat")
#JAX
JX_C <- read_sas("jxm_cn_c.sas7bdat")
JX_Hab <- read_sas("jxm_cn_hab.sas7bdat")
JX_Hyd <- read_sas("jxm_cn_hyd.sas7bdat")
JX_L <- read_sas("jxm_cn_l.sas7bdat")
#Tampa Bay
TB_C <- read_sas("tbm_cn_c.sas7bdat")
TB_Hab <- read_sas("tbm_cn_hab.sas7bdat")
TB_Hyd <- read_sas("tbm_cn_hyd.sas7bdat")
TB_L <- read_sas("tbm_cn_l.sas7bdat")
#Tequesta (Southern Indian River Lagoon??- index no calculated becuase 21.3m seines were not included in sampling)
TQM_C <- read_sas("tqm_cn_c.sas7bdat")
TQM_Hab <- read_sas("tqm_cn_hab.sas7bdat")
TQM_Hyd <- read_sas("tqm_cn_hyd.sas7bdat")
TQM_L <- read_sas("tqm_cn_l.sas7bdat")
#########################################################
# Explore aspects of each data set
###########
head()
melt()
unique()
#########################################################
# Constraints to Data sets
# _L$sl => between 0-100 (YOY animals in this range)
# _C$gear => 20 & 23 (bay seines and river seines that target YOY)
# _C$month => depends on recruitment window in each eastuary
#               => Jax 5<=x<=11
#               => nor. IRL 5<=x<=11
#               => CK  5<=x<=11
#               => TB  4<=x<=10
#               => CH  4<=x<=10
#               => AP  6<=x<=10
# _C$Zone => depends on each estuary (for a more in depth description of monthly sampling within bay or riverine see Annual Report)
#               => TB BAY(A-E), RIVERINE (K-N)
#               => CH BAY(A-D), RIVERINE (M-P)
#               => nor.IRL BAY(A-E, H), RIVERINE (F)
#               => AP BAY(A-B), RIVERINE (C)
#               => Jax RIVERINE (A-F)
#               => CK BAY(B-C), RIVERINE (F)
########################################################
# Apply constraints
#########################
apl <- subset(AP_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
apc_bay <- subset(AP_C, gr==23 | gr==20 & month >= 6 & month <= 10 & Zone == "A" | Zone== "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
apc_riv <- subset(AP_C, gr==23 | gr==20 & month >= 6 & month <= 10 & Zone == "C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
chl <- subset(CH_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
chc_bay <- subset(CH_C, gr==23 | gr==20 & month >= 4 & month <= 10 & Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
chc_riv <- subset(CH_C, gr==23 | gr==20 & month >= 4 & month <= 10 & Zone == "M" | Zone == "N" | Zone == "O" | Zone== "P", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
ckl <- subset(CK_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
ckc_bay <- subset(CK_C, gr==23 | gr==20 & month >= 5 & month <= 11 & Zone == "B" | Zone == "C" , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
ckc_riv <- subset(CK_C, gr==23 | gr==20 & month >= 5 & month <= 11 & Zone == "F" , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
irl <- subset(IR_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
irc_bay <- subset(IR_C, gr==23 | gr==20 & month >= 5 & month <= 11 & Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E" | Zone=="H", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
irc_riv <- subset(IR_C, gr==23 | gr==20 & month >= 5 & month <= 11 & Zone == "F" , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
jxl <- subset(JX_L, sl <= 100, select =c(bio_reference, sl, COUNT , nl))
jxc_riv <- subset(JX_C, gr==23 | gr==20 & month >= 5 & month <= 11 & Zone == "A" | Zone == "B" | Zone== "C" | Zone=="D" | Zone=="E"  | Zone == "F", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
tbl <- subset(TB_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
tbc_bay <- subset(TB_C, gr==23 | gr==20 & month >= 5 & month <= 11 & Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E" | Zone=="H", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
tbc_riv <- subset(TB_C, gr==23 | gr==20 & month >= 5 & month <= 11 & Zone == "F" , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
############################################################
# Merge values from c_bay and c_riv into ##l so all values from the c_bay and c_riv can be retained
# but only at the bio_reference numbers in the length variables. If I wanted to retain all values -> all=TRUE
############################################################
AP_BAY <- merge(apc_bay, apl, by="bio_reference")
head(AP_BAY)
melt(AP_BAY)
library("reshape2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
melt(AP_BAY)
head(AP_BAY)
AP_BAY_A <- subset(AP_BAY, ZONE=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
AP_BAY_A <- subset(AP_BAY, Zone=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
unique(AP_BAY$Zone)
unique(AP_BAY_A$Zone)
unique(apc_bay$Zone)
apc_bay <- subset(AP_C, gr==23 | gr==20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bay$gr)
unique(apc_riv$Zone)
unique(AP_C$Zone)
unique(AP_C$gr)
str(AP_C)
str(AP_C$Zone)
str(df(AP_C$Zone))
is.df(AP_C)
AP_Cdf <- data.frame(AP_C)
apc_bay <- subset(AP_Cdf, gr==23 | gr==20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bay$Zone)
apc_bay <- subset(AP_Cdf, gr=23 | gr=20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
apc_bay <- subset(AP_Cdf, gr==23 | gr==20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bay$month)
AP_C  <- data.from(read_sas("apm_cn_c.sas7bdat"))
AP_C  <- data.frame(read_sas("apm_cn_c.sas7bdat"))
apc_bay <- subset(AP_C, gr==23 | gr==20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bay$Zone)
View(apc_bay)
View(apc_bay)
apc_bay <- subset(AP_C, gr= 23 | gr=20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
apc_bay <- subset(AP_C, gr = 23 | gr = 20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
apc_bay1 <- subset(AP_C, gr = 23 | gr = 20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, bottom, n, number) )
apc_bay1 <- subset(AP_C, gr == 23 | gr == 20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, bottom, n, number) )
apc_bay1 <- subset(AP_C, gr == 23, select=c(gr,Zone)) # | gr == 20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bay1$gr)
apc_bay1 <- subset(AP_C, gr == 23 | gr ==20, select=c(gr,Zone)) # | gr == 20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bay1$gr)
apc_bay1 <- subset(AP_C, gr == 23 | gr ==20 & month >=6, select=c(gr,Zone, month)) # | gr == 20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bay1$gr)
apc_bay1 <- subset(AP_C, gr == 23 | gr ==20 & month >=6 & month <= 10, select=c(gr,Zone, month)) # | gr == 20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bay1$gr)
apc_bay1 <- subset(AP_C, gr == 23 | gr ==20 & month >=6 & month <= 10 & Zone == "A" select=c(gr,Zone, month)) # | gr == 20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
apc_bay1 <- subset(AP_C, gr == 23 | gr ==20 & month >=6 & month <= 10 & Zone == "A", select=c(gr,Zone, month)) # | gr == 20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bay1$gr)
apc_bay1 <- subset(AP_C, gr == 23 | gr ==20 & month >=6 & month <= 10 & Zone == "A" | Zone == "B", select=c(gr,Zone, month)) # | gr == 20 & month >= 6 & month <= 10 & Zone == "A" | Zone == "B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bay1$gr)
apl <- subset(AP_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
apc_bayA <- subset(AP_C, gr == 23 | gr ==20 & month >=6 & month <= 10 & Zone == "A" , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bayA$gr)
unique(apc_bayA$Zone)
apc_bayA <- subset(AP_C, (gr == 23 | gr ==20) & month >=6 & month <= 10 & Zone == "A" , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bayA$Zone)
apc_bay <- subset(AP_C, (gr == 23 | gr ==20) & month >=6 & month <= 10 & (Zone == "A" | Zone == "B") , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(apc_bay$Zone)
unique(apc_bay$gr)
unique(apc_bay$month)
chc_bay <- subset(CH_C, (gr==23 | gr==20) & month >= 4 & month <= 10 & (Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(chc_bay$gr)
chc_riv <- subset(CH_C, (gr==23 | gr==20) & month >= 4 & month <= 10 & (Zone == "M" | Zone == "N" | Zone == "O" | Zone== "P"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
unique(chc_riv$gr)
AP_BAY_A <- subset(AP_BAY, Zone=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
unique(AP_BAY_A$Zone)
unique(AP_BAY$Zone)
apc_bay <- subset(AP_C, (gr == 23 | gr ==20) & month >=6 & month <= 10 & (Zone == "A" | Zone == "B") , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
AP_BAY <- merge(apc_bay, apl, by="bio_reference")
unique(AP_BAY$Zone)
# Apply constraints
#########################
apl <- subset(AP_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
apc_bay <- subset(AP_C, (gr == 23 | gr ==20) & month >=6 & month <= 10 & (Zone == "A" | Zone == "B") , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
# technically, when in bays the gear is coded as 20 so including it in a constraint is redundant.
apc_riv <- subset(AP_C, (gr==23   | gr ==20) & month >=6 & month <= 10 & (Zone == "C"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
chl <- subset(CH_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
chc_bay <- subset(CH_C, (gr==23 | gr==20) & month >= 4 & month <= 10 & (Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
chc_riv <- subset(CH_C, (gr==23 | gr==20) & month >= 4 & month <= 10 & (Zone == "M" | Zone == "N" | Zone == "O" | Zone== "P"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
ckl <- subset(CK_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
ckc_bay <- subset(CK_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & (Zone == "B" | Zone == "C") , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
ckc_riv <- subset(CK_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & Zone == "F" , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
irl <- subset(IR_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
irc_bay <- subset(IR_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & (Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E" | Zone=="H"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
irc_riv <- subset(IR_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & Zone == "F" , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
jxl <- subset(JX_L, sl <= 100, select =c(bio_reference, sl, COUNT , nl))
jxc_riv <- subset(JX_C, gr==23 | gr==20 & month >= 5 & month <= 11 & (Zone == "A" | Zone == "B" | Zone== "C" | Zone=="D" | Zone=="E"  | Zone == "F"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
tbl <- subset(TB_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
tbc_bay <- subset(TB_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & (Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E" | Zone=="H"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
tbc_riv <- subset(TB_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & Zone == "F" , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
############################################################
# Merge values from c_bay and c_riv into ##l so all values from the c_bay and c_riv can be retained
# but only at the bio_reference numbers in the length variables. If I wanted to retain all values -> all=TRUE
############################################################
AP_BAY <- merge(apc_bay, apl, by="bio_reference")
unique(AP_BAY$Zone)
AP_RIV <- merge(apc_riv, apl, by="bio_reference")
CH_BAY <- merge(chc_bay, chl, by="bio_reference")
CH_RIV <- merge(chc_riv, chl, by="bio_reference")
CK_BAY <- merge(ckc_bay, ckl, by="bio_reference")
CK_RIV <- merge(ckc_riv, ckl, by="bio_reference")
IR_BAY <- merge(irc_bay, irl, by="bio_reference")
IR_RIV <- merge(irc_riv, irl, by="bio_reference")
JX_RIV <- merge(jxc_riv, jxl, by="bio_reference")
TB_BAY <- merge(tbc_bay, tbl, by="bio_reference")
TB_RIV <- merge(tbc_riv, tbl, by="bio_reference")
unique(AP_BAY_A$Zone)
AP_BAY_A <- subset(AP_BAY, Zone=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
AP_BAY_B <- subset(AP_BAY, Zone=="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
AP_RIV_C <- subset(AP_RIV, Zone=="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
AP_BAY_A <- subset(AP_BAY, Zone=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
AP_BAY_B <- subset(AP_BAY, Zone=="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
AP_RIV_C <- subset(AP_RIV, Zone=="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_BAY_A <- subset(CH_BAY, Zone="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_BAY_B <- subset(CH_BAY, Zone="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_BAY_C <- subset(CH_BAY, Zone="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_BAY_D <- subset(CH_BAY, Zone="D", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_RIV_M <- subset(CH_RIV, Zone="M", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_RIV_N <- subset(CH_RIV, Zone="N", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_RIV_O <- subset(CH_RIV, Zone="O", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_RIV_P <- subset(CH_RIV, Zone="P", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CK_BAY_B <- subset(CK_BAY, Zone="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CK_BAY_C <- subset(CK_BAY, Zone="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CK_RIV_C <- subset(CK_BAY, Zone="F", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_A <- subset(IR_BAY, Zone="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_B <- subset(IR_BAY, Zone="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_C <- subset(IR_BAY, Zone="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_D <- subset(IR_BAY, Zone="D", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_E <- subset(IR_BAY, Zone="E", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_H <- subset(IR_BAY, Zone="H", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_RIV_F <- subset(IR_RIV, Zone="F", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_A <- subset(JX_RIV, Zone="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_B <- subset(JX_RIV, Zone="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_C <- subset(JX_RIV, Zone="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_D <- subset(JX_RIV, Zone="D", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_E <- subset(JX_RIV, Zone="E", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_F <- subset(JX_RIV, Zone="F", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_A <- subset(TB_BAY, Zone="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_B <- subset(TB_BAY, Zone="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_C <- subset(TB_BAY, Zone="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_D <- subset(TB_BAY, Zone="D", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_E <- subset(TB_BAY, Zone="E", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_M <- subset(TB_RIV, Zone="M", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_N <- subset(TB_RIV, Zone="N", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_O <- subset(TB_RIV, Zone="O", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_P <- subset(TB_RIV, Zone="P", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
head(TB_BAY_A)
str(TB_BAY_A)
max(TB_BAY_A$year)
unique(TB_BAY_A$bottom)
unique(TB_BAY_A$Grid)
count(unique(TB_BAY_A$Grid))
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
count(unique(TB_BAY_A$Grid))
sum(unique(TB_BAY_A$Grid))
as.matrix(sum(unique(TB_BAY_A$Grid)))
sum(unique(TB_BAY_A$Grid))
count(unique(TB_BAY_A$Grid))
as.matrix(count(unique(TB_BAY_A$Grid)))
View(TB_BAY_A)
View(TB_BAY_A)
TB_BAY_AUN <- unique(TB_BAY_AUN$bio_reference)
TB_BAY_AUN <- unique(TB_BAY_A$bio_reference)
TB_BAY_Aun <- unique(TB_BAY_A$bio_reference)
TB_BAY_Aun <- merge(TB_BAY_A, TB_BAY_Aun, by="bio_reference")
test <- TB_BAY_A[!duplicated(TB_BAY_A$bio_reference)]
test <- TB_BAY_A[!duplicated(TB_BAY_A['bio_reference'])]
test <- TB_BAY_A[!duplicated(TB_BAY_A[.("bio_reference")])]
test <- TB_BAY_A[!duplicated(TB_BAY_A[("bio_reference")])]
test <- subset(TB_BAY_A, !duplicated("bio_reference"))
View(test)
View(test)
unique(TB_BAY_A)
test <- unique(TB_BAY_A$bio_reference)
test <- subset(TB_BAY_A, !duplicated(bio_reference))
TB_BAY_AUn <- subset(TB_BAY_A, !duplicated(bio_reference))
View(TB_BAY_AUn)
View(TB_BAY_AUn)
TB_BAY_A <- subset(TB_BAY, Zone=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_B <- subset(TB_BAY, Zone=="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_C <- subset(TB_BAY, Zone=="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_D <- subset(TB_BAY, Zone=="D", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_E <- subset(TB_BAY, Zone=="E", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_M <- subset(TB_RIV, Zone=="M", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_N <- subset(TB_RIV, Zone=="N", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_O <- subset(TB_RIV, Zone=="O", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_P <- subset(TB_RIV, Zone=="P", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
unique(TB_BAY_A$Zone)
TB_B_Asum <- ddply(TB_BAY_A, c("year", "month"), summarise, N=length("number"), avg.num=mean("number"))
warnings()
str(TB_BAY_AUn)
TB_B_Asum <- ddply(TB_BAY_A, c(year, month), summarise, N=length(number), avg.num=mean(number))
TB_B_Asum <- ddply(TB_BAY_AUn, c(year, month), summarise, N=length(number), avg.num=mean(number))
unique(TB_BAY_AUn)
unique(TB_BAY_AUn$Zone)
TB_BAY_A <- subset(TB_BAY, Zone=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
unique(TB_BAY_AUn$Zone)
unique(TB_BAY_A$Zone)
TB_BAY_AUn <- subset(TB_BAY_A, !duplicated(bio_reference))
unique(TB_BAY_AUn$Zone)
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, N=length("number"), avg.num=mean("number"))
View(TB_B_Asum)
View(TB_B_Asum)
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, N=length(number), avg.num=mean(number))
View(TB_B_Asum)
View(TB_B_Asum)
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, Number of Observations=length(number), median.num=median(number))
279+28+178+44+45
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, NumberofBioref=length(number), median.num=median(number))
View(TB_BAY_AUn)
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, NumberofHaulObservations=length(number), median.num=median(number))
View(TB_B_Asum)
View(TB_B_Asum)
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, NumberofHaulObservations=length(number), TotalNumberofAnimalsCollectedinHauls=sum(number), median.num=median(number))
View(TB_B_Asum)
View(TB_B_Asum)
View(TB_B_Asum)
View(TB_B_Asum)
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, NumberofHaulObservations=length(number), TotalNumberofAnimalsCollectedinHauls=sum(number), mean.num=(number), median.num=median(number))
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, NumberofBioReferences=length(bio_reference), TotalNumberofAnimalsCollectedinHauls=sum(number), mean.num=(number), median.num=median(number))
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, NumberofBioReferences=length(bio_reference), TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=(number), mediannumbercollected=median(number))
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, NumberofBioReferences=length(bio_reference)) #, TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=(number), mediannumbercollected=median(number))
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number)) #, avgofnumbercollectedinhauls=(number), mediannumbercollected=median(number))
TB_B_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
View(TB_B_Asum)
View(TB_B_Asum)
4+2+59+11+4+7
########################################################
# Apply constraints
#########################
apl <- subset(AP_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
apc_bay <- subset(AP_C, (gr == 23 | gr ==20) & month >=6 & month <= 10 & (Zone == "A" | Zone == "B") , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
# technically, when in bays the gear is coded as 20 so including it in a constraint is redundant.
apc_riv <- subset(AP_C, (gr==23   | gr ==20) & month >=6 & month <= 10 & (Zone == "C"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
chl <- subset(CH_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
chc_bay <- subset(CH_C, (gr==23 | gr==20) & month >= 4 & month <= 10 & (Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
chc_riv <- subset(CH_C, (gr==23 | gr==20) & month >= 4 & month <= 10 & (Zone == "M" | Zone == "N" | Zone == "O" | Zone== "P"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
ckl <- subset(CK_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
ckc_bay <- subset(CK_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & (Zone == "B" | Zone == "C") , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
ckc_riv <- subset(CK_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & Zone == "F" , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
irl <- subset(IR_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
irc_bay <- subset(IR_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & (Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E" | Zone=="H"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
irc_riv <- subset(IR_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & Zone == "F" , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
jxl <- subset(JX_L, sl <= 100, select =c(bio_reference, sl, COUNT , nl))
jxc_riv <- subset(JX_C, gr==23 | gr==20 & month >= 5 & month <= 11 & (Zone == "A" | Zone == "B" | Zone== "C" | Zone=="D" | Zone=="E"  | Zone == "F"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
tbl <- subset(TB_L, sl <= 100, select =c(bio_reference, sl, COUNT, nl))
tbc_bay <- subset(TB_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & (Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
tbc_riv <- subset(TB_C, (gr==23 | gr==20) & month >= 5 & month <= 11 & (Zone == "K" | Zone == "L" | Zone == "M" | Zone== "N") , select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
############################################################
# Merge values from c_bay and c_riv into ##l so all values from the c_bay and c_riv can be retained
# but only at the bio_reference numbers in the length variables. If I wanted to retain all values -> all=TRUE
############################################################
AP_BAY <- merge(apc_bay, apl, by="bio_reference")
unique(AP_BAY$Zone)
AP_RIV <- merge(apc_riv, apl, by="bio_reference")
CH_BAY <- merge(chc_bay, chl, by="bio_reference")
CH_RIV <- merge(chc_riv, chl, by="bio_reference")
CK_BAY <- merge(ckc_bay, ckl, by="bio_reference")
CK_RIV <- merge(ckc_riv, ckl, by="bio_reference")
IR_BAY <- merge(irc_bay, irl, by="bio_reference")
IR_RIV <- merge(irc_riv, irl, by="bio_reference")
JX_RIV <- merge(jxc_riv, jxl, by="bio_reference")
TB_BAY <- merge(tbc_bay, tbl, by="bio_reference")
TB_RIV <- merge(tbc_riv, tbl, by="bio_reference")
######### SHORT EXPLORATION INTO BIO_REFERENCE CODES###############
# NOTE: catch file and length file have 2185 bio_references in common and 16276 in difference.
# Therefore when merged they create a df "new" that has 2185 unique bio_reference numbers.
library(dplyr)
data.frame(tbc_bay)
data.frame(tbl)
same <- semi_join(tbc_bay, tbl, by= 'bio_reference') #2185
diff <- anti_join(tbc_bay, tbl, by= 'bio_reference') #16276
untbl <- unique(tbl$bio_reference) #2290 unique bio_reference in tbl, length of tbl is 9224
untbc <- unique(tbc_bay$bio_reference) #18461 unique bio_reference in tbc_bay, length is 18461
unnew <- unique(new$bio_reference) # 2185 unique bio_reference in new, length is 8794
###################################################################
# Seperate by Zone within Estuary
##########################################
AP_BAY_A <- subset(AP_BAY, Zone=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
AP_BAY_B <- subset(AP_BAY, Zone=="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
AP_RIV_C <- subset(AP_RIV, Zone=="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_BAY_A <- subset(CH_BAY, Zone=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_BAY_B <- subset(CH_BAY, Zone=="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_BAY_C <- subset(CH_BAY, Zone=="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_BAY_D <- subset(CH_BAY, Zone=="D", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_RIV_M <- subset(CH_RIV, Zone=="M", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_RIV_N <- subset(CH_RIV, Zone=="N", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_RIV_O <- subset(CH_RIV, Zone=="O", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CH_RIV_P <- subset(CH_RIV, Zone=="P", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CK_BAY_B <- subset(CK_BAY, Zone=="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CK_BAY_C <- subset(CK_BAY, Zone=="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
CK_RIV_C <- subset(CK_BAY, Zone=="F", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_A <- subset(IR_BAY, Zone=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_B <- subset(IR_BAY, Zone=="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_C <- subset(IR_BAY, Zone=="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_D <- subset(IR_BAY, Zone=="D", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_E <- subset(IR_BAY, Zone=="E", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_BAY_H <- subset(IR_BAY, Zone=="H", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
IR_RIV_F <- subset(IR_RIV, Zone=="F", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_A <- subset(JX_RIV, Zone=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_B <- subset(JX_RIV, Zone=="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_C <- subset(JX_RIV, Zone=="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_D <- subset(JX_RIV, Zone=="D", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_E <- subset(JX_RIV, Zone=="E", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
JX_RIV_F <- subset(JX_RIV, Zone=="F", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_A <- subset(TB_BAY, Zone=="A", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_B <- subset(TB_BAY, Zone=="B", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_C <- subset(TB_BAY, Zone=="C", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_D <- subset(TB_BAY, Zone=="D", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_E <- subset(TB_BAY, Zone=="E", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_M <- subset(TB_RIV, Zone=="M", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_N <- subset(TB_RIV, Zone=="N", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_O <- subset(TB_RIV, Zone=="O", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_RIV_P <- subset(TB_RIV, Zone=="P", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number, sl, COUNT, nl))
TB_BAY_AUn <- subset(TB_BAY_A, !duplicated(bio_reference))
TB_BAY_BUn <- subset(TB_BAY_B, !duplicated(bio_reference))
TB_BAY_CUn <- subset(TB_BAY_C, !duplicated(bio_reference))
TB_BAY_DUn <- subset(TB_BAY_D, !duplicated(bio_reference))
TB_BAY_EUn <- subset(TB_BAY_E, !duplicated(bio_reference))
TB_RIV_MUn <- subset(TB_RIV_M, !duplicated(bio_reference))
TB_RIV_NUn <- subset(TB_RIV_N, !duplicated(bio_reference))
TB_RIV_OUn <- subset(TB_RIV_O, !duplicated(bio_reference))
TB_RIV_PUn <- subset(TB_RIV_P, !duplicated(bio_reference))
#############################################################
# Summarise the data.
# I've chosed to summarize the data by year and month. Number of BioReferences is the number of different bio_references being summarized by month of each year.
# TotalNumberofAnimalsCollectedinHauls in the summation of the total number of animals collected in the hauls for month by year.
# MedianNumberofAnimas, MeanNumberofAnimals
##############################################################################################################
TBB_Asum <- ddply(TB_BAY_AUn, c("year", "month"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
TBB_Bsum <- ddply(TB_BAY_BUn, c("year", "month"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
TBB_Csum <- ddply(TB_BAY_CUn, c("year", "month"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
TBB_Dsum <- ddply(TB_BAY_DUn, c("year", "month"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
TBB_Esum <- ddply(TB_BAY_EUn, c("year", "month"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
View(TBB_Bsum)
View(TBB_Bsum)
1+5+4+6
View(TBB_Csum)
View(TBB_Csum)
23+2+1+8+3
View(TBB_Dsum)
View(TBB_Dsum)
2+12+4+7+1
View(TBB_Esum)
View(TBB_Esum)
33+3+11+47+1
87+16+37+26+95
2+1+1+22+1+13+5
1)+3+5+9+7+4+1
1+3+5+9+7+4+1
5+37+29+14+8+12
12+1+6+13+4
2+1+24+12+24+18
81+36+105+30+45
View(AP_C)
View(AP_C)
View(AP_C)
View(AP_C)
# This script loads Spotted Seatrout raw survy data. They are stored as .sas7bdat at FWRI but I will be using
unique(AP_C$bveg)
tbc_bayFWRItest <- subset(TB_C, (gr==23 | gr==20) &  (Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
test <- merge(tbc_bayFWRItest, tbl, by="bio_reference")
tbc_bayFWRItest <- subset(TB_C, (gr==23 | gr==20) &  (Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
test <- merge(tbc_bayFWRItest, tbl, by="bio_reference")
testUn <- subset(test, !duplicated(bio_reference))
testsum <- ddply(testUn, c("year", "month"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
View(testsum)
View(testsum)
testsum <- ddply(testUn, c("year"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
View(testsum)
View(testsum)
testUn <- subset(tbc_bayFWRItest, !duplicated(bio_reference))
testsum <- ddply(testUn, c("year"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
View(testsum)
View(testsum)
View(testsum)
View(testsum)
tbc_bayFWRItest <- subset(TB_C, Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E", select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
testUn <- subset(tbc_bayFWRItest, !duplicated(bio_reference))
testsum <- ddply(testUn, c("year"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
View(testsum)
View(testsum)
tbc_bayFWRItest <- subset(TB_C, gr==20 & ( Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
testUn <- subset(tbc_bayFWRItest, !duplicated(bio_reference))
View(testUn)
View(testUn)
testsum <- ddply(testUn, c("year"), summarise, NumberofBioReferences=length(bio_reference) , NumberofBioReferences=sum(bio_reference), TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
View(testsum)
View(testsum)
View(testUn)
View(testUn)
testsum <- ddply(testUn, c("year"), summarise, NumberofBioReferences=length(bio_reference) , NumberofBioReferences2=sum(bio_reference), TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
testsum <- ddply(testUn, c("year"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(number), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
View(testsum)
View(testsum)
View(tbc_bayFWRItest)
View(tbc_bayFWRItest)
unique(TB_C$Zone)
unique(tbc_bayFWRItest$Zone)
unique(tbc_bayFWRItest$gr)
testsum2 <- ddply(testUn, c("year"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(n), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
View(testsum2)
View(testsum2)
testsum2 <- ddply(tbc_bayFWRItest, c("year"), summarise, NumberofBioReferences=length(bio_reference) , TotalNumberofAnimalsCollectedinHauls=sum(n), avgofnumbercollectedinhauls=mean(number), mediannumbercollected=median(number))
View(testsum2)
View(testsum2)
tbc_bayFWRItest <- subset(TB_C, gr==20 & ( Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
test <- merge(tbc_bayFWRItest, tbl, by="bio_reference")
test <- merge(tbc_bayFWRItest, TB_L, by="bio_reference")
View(test)
View(test)
test <- merge(tbc_bayFWRItest, TB_L, by="bio_reference")
testUn <- subset(test, !duplicated(bio_reference))
View(testUn)
View(testUn)
View(tbc_bayFWRItest)
View(tbc_bayFWRItest)
tbc_bayFWRItest <- subset(TB_C, gr==20 & ( Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
View(tbc_bayFWRItest)
View(tbc_bayFWRItest)
test <- subset(tbc_bayFWRItest, year==2014)
test1 <- merge(tbc_bayFWRItest, TB_L, by="bio_reference")
View(test)
View(test)
sum(test$number)
tbc_bayFWRItest <- subset(TB_C, gr==20 ,  select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )  #& ( Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
View(tbc_bayFWRItest)
View(tbc_bayFWRItest)
test <- subset(tbc_bayFWRItest, year==2014)
sum(test$number)
sum(test$n)
tbc_rivFWRItest <- subset(TB_C, gr==23)
testriv <- subset(tbc_rivFWRItest, year==2014)
sum(testriv$number)
unique(TB_C$gear)
unique(TB_C$Gear)
unique(TB_C$gr)
tbc_bayFWRItest <- subset(TB_C, (gr==20 | gr==19) ,  select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )  #& ( Zone == "A" | Zone == "B" | Zone == "C" | Zone== "D" | Zone=="E"), select=c(bio_reference, Longitude, Latitude, Zone, Grid, month, year, gr, bottom, n, number) )
testbay <- subset(tbc_bayFWRItest, year==2014)
sum(testbay$n)
279+28+178
testriv <- subset(tbc_rivFWRItest, year==2014)
sum(testriv$number)
44+45
